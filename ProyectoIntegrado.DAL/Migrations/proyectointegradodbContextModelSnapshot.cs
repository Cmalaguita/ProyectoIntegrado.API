// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoIntegrado.DAL.Entities;

namespace ProyectoIntegrado.DAL.Migrations
{
    [DbContext(typeof(proyectointegradodbContext))]
    partial class proyectointegradodbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasCharSet("utf8mb4")
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("ProyectoIntegrado.DAL.Entities.Alumno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellidos")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaDeNacimiento")
                        .HasColumnType("Date");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int");

                    b.Property<string>("Localidad")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<double>("NotaMedia")
                        .HasColumnType("double");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdProvincia");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("ProyectoIntegrado.DAL.Entities.Ciclo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdFamilia")
                        .HasColumnType("int");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int");

                    b.Property<int>("MyProperty")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<int?>("PosicionDeTrabajoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdFamilia");

                    b.HasIndex("IdTipo");

                    b.HasIndex("PosicionDeTrabajoId");

                    b.ToTable("Ciclo");
                });

            modelBuilder.Entity("ProyectoIntegrado.DAL.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Localidad")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProvinciaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("ProyectoIntegrado.DAL.Entities.FamiliaProfesional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("FamiliaProfesional");
                });

            modelBuilder.Entity("ProyectoIntegrado.DAL.Entities.PosicionDeTrabajo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Horario")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<double>("Remuneracion")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Posiciones");
                });

            modelBuilder.Entity("ProyectoIntegrado.DAL.Entities.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("ProyectoIntegrado.DAL.Entities.TipoDeCiclo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoDeCiclo");
                });

            modelBuilder.Entity("ProyectoIntegrado.DAL.Entities.Alumno", b =>
                {
                    b.HasOne("ProyectoIntegrado.DAL.Entities.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("ProyectoIntegrado.DAL.Entities.Ciclo", b =>
                {
                    b.HasOne("ProyectoIntegrado.DAL.Entities.FamiliaProfesional", "familia")
                        .WithMany()
                        .HasForeignKey("IdFamilia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoIntegrado.DAL.Entities.TipoDeCiclo", "TipoCiclo")
                        .WithMany()
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoIntegrado.DAL.Entities.PosicionDeTrabajo", null)
                        .WithMany("Ciclos")
                        .HasForeignKey("PosicionDeTrabajoId");

                    b.Navigation("familia");

                    b.Navigation("TipoCiclo");
                });

            modelBuilder.Entity("ProyectoIntegrado.DAL.Entities.Empresa", b =>
                {
                    b.HasOne("ProyectoIntegrado.DAL.Entities.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("ProyectoIntegrado.DAL.Entities.PosicionDeTrabajo", b =>
                {
                    b.HasOne("ProyectoIntegrado.DAL.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("ProyectoIntegrado.DAL.Entities.PosicionDeTrabajo", b =>
                {
                    b.Navigation("Ciclos");
                });
#pragma warning restore 612, 618
        }
    }
}
